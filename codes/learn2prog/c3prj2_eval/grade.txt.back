Grading at Mon 11 Apr 2022 01:09:26 AM UTC
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==161== Memcheck, a memory error detector
==161== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==161== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==161== Command: ./test-eval inp.2.txt
==161== Parent PID: 160
==161== 
==161== Use of uninitialised value of size 8
==161==    at 0x109424: print_hand (deck.c:8)
==161==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==161==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==161== 
==161== 
==161== Process terminating with default action of signal 6 (SIGABRT): dumping core
==161==    at 0x489618B: raise (raise.c:51)
==161==    by 0x4875858: abort (abort.c:79)
==161==    by 0x4875728: __assert_fail_base.cold (assert.c:92)
==161==    by 0x4886F35: __assert_fail (assert.c:101)
==161==    by 0x10B462: assert_card_valid (cards.c:11)
==161==    by 0x10B5C6: print_card (cards.c:52)
==161==    by 0x10942B: print_hand (deck.c:8)
==161==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==161==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==161== 
==161== HEAP SUMMARY:
==161==     in use at exit: 816 bytes in 18 blocks
==161==   total heap usage: 205 allocs, 187 frees, 13,412 bytes allocated
==161== 
==161== LEAK SUMMARY:
==161==    definitely lost: 0 bytes in 0 blocks
==161==    indirectly lost: 0 bytes in 0 blocks
==161==      possibly lost: 0 bytes in 0 blocks
==161==    still reachable: 816 bytes in 18 blocks
==161==         suppressed: 0 bytes in 0 blocks
==161== Rerun with --leak-check=full to see details of leaked memory
==161== 
==161== Use --track-origins=yes to see where uninitialised values come from
==161== For lists of detected and suppressed errors, rerun with: -s
==161== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==178== Memcheck, a memory error detector
==178== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==178== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==178== Command: ./test-eval inp.4.txt
==178== Parent PID: 177
==178== 
==178== Use of uninitialised value of size 8
==178==    at 0x109424: print_hand (deck.c:8)
==178==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==178==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==178== 
==178== 
==178== Process terminating with default action of signal 6 (SIGABRT): dumping core
==178==    at 0x489618B: raise (raise.c:51)
==178==    by 0x4875858: abort (abort.c:79)
==178==    by 0x4875728: __assert_fail_base.cold (assert.c:92)
==178==    by 0x4886F35: __assert_fail (assert.c:101)
==178==    by 0x10B462: assert_card_valid (cards.c:11)
==178==    by 0x10B5C6: print_card (cards.c:52)
==178==    by 0x10942B: print_hand (deck.c:8)
==178==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==178==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==178== 
==178== HEAP SUMMARY:
==178==     in use at exit: 816 bytes in 18 blocks
==178==   total heap usage: 267 allocs, 249 frees, 14,608 bytes allocated
==178== 
==178== LEAK SUMMARY:
==178==    definitely lost: 0 bytes in 0 blocks
==178==    indirectly lost: 0 bytes in 0 blocks
==178==      possibly lost: 0 bytes in 0 blocks
==178==    still reachable: 816 bytes in 18 blocks
==178==         suppressed: 0 bytes in 0 blocks
==178== Rerun with --leak-check=full to see details of leaked memory
==178== 
==178== Use --track-origins=yes to see where uninitialised values come from
==178== For lists of detected and suppressed errors, rerun with: -s
==178== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==207== Memcheck, a memory error detector
==207== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==207== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==207== Command: ./test-eval inp.7.txt
==207== Parent PID: 206
==207== 
==207== Use of uninitialised value of size 8
==207==    at 0x109424: print_hand (deck.c:8)
==207==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==207==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==207== 
==207== Invalid read of size 8
==207==    at 0x109424: print_hand (deck.c:8)
==207==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==207==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==207==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==207== 
==207== 
==207== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==207==  Access not within mapped region at address 0x0
==207==    at 0x109424: print_hand (deck.c:8)
==207==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==207==    by 0x10B2CB: main (in /graderhome/work/c3prj2_eval/test-eval)
==207==  If you believe this happened as a result of a stack
==207==  overflow in your program's main thread (unlikely but
==207==  possible), you can try to increase the size of the
==207==  main thread stack using the --main-stacksize= flag.
==207==  The main thread stack size used in this run was 8388608.
==207== 
==207== HEAP SUMMARY:
==207==     in use at exit: 832 bytes in 19 blocks
==207==   total heap usage: 480 allocs, 461 frees, 18,776 bytes allocated
==207== 
==207== LEAK SUMMARY:
==207==    definitely lost: 0 bytes in 0 blocks
==207==    indirectly lost: 0 bytes in 0 blocks
==207==      possibly lost: 0 bytes in 0 blocks
==207==    still reachable: 832 bytes in 19 blocks
==207==         suppressed: 0 bytes in 0 blocks
==207== Rerun with --leak-check=full to see details of leaked memory
==207== 
==207== Use --track-origins=yes to see where uninitialised values come from
==207== For lists of detected and suppressed errors, rerun with: -s
==207== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==212== Memcheck, a memory error detector
==212== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==212== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==212== Command: ./test-eval inp.8.txt
==212== Parent PID: 211
==212== 
==212== Use of uninitialised value of size 8
==212==    at 0x109424: print_hand (deck.c:8)
==212==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==212==    by 0x10B2EF: main (in /graderhome/work/c3prj2_eval/test-eval)
==212== 
==212== Invalid read of size 8
==212==    at 0x109424: print_hand (deck.c:8)
==212==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==212==    by 0x10B2EF: main (in /graderhome/work/c3prj2_eval/test-eval)
==212==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==212== 
==212== 
==212== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==212==  Access not within mapped region at address 0x0
==212==    at 0x109424: print_hand (deck.c:8)
==212==    by 0x10B0D3: describe_hand (in /graderhome/work/c3prj2_eval/test-eval)
==212==    by 0x10B2EF: main (in /graderhome/work/c3prj2_eval/test-eval)
==212==  If you believe this happened as a result of a stack
==212==  overflow in your program's main thread (unlikely but
==212==  possible), you can try to increase the size of the
==212==  main thread stack using the --main-stacksize= flag.
==212==  The main thread stack size used in this run was 8388608.
==212== 
==212== HEAP SUMMARY:
==212==     in use at exit: 816 bytes in 18 blocks
==212==   total heap usage: 150 allocs, 132 frees, 12,000 bytes allocated
==212== 
==212== LEAK SUMMARY:
==212==    definitely lost: 0 bytes in 0 blocks
==212==    indirectly lost: 0 bytes in 0 blocks
==212==      possibly lost: 0 bytes in 0 blocks
==212==    still reachable: 816 bytes in 18 blocks
==212==         suppressed: 0 bytes in 0 blocks
==212== Rerun with --leak-check=full to see details of leaked memory
==212== 
==212== Use --track-origins=yes to see where uninitialised values come from
==212== For lists of detected and suppressed errors, rerun with: -s
==212== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 10: Trying each type of hand ranking
 Checking the output 
Your file matched the expected output
 - Testcase passed

Overall Grade: D
